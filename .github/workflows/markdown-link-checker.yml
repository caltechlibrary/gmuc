# @file    markdown-link-checker.yml
# @brief   GitHub Actions workflow to check the README file for broken links
# @license Please see the file named LICENSE in the repository
# @repo    https://github.com/caltechlibrary/iga
#
# This file was originally based on code obtained 2023-11-26 from
# https://github.com/saver999/Broken-Links-Checker

name: Check README for broken links
run-name: Check README for broken links after ${{github.event_name}} by ${{github.actor}}

on:
  push:
    paths:
      - 'README.md'
  pull_request:
    paths:
      - 'README.md'
  workflow_dispatch:
    paths:
      - 'README.md'

env:
  GMUC_ISSUE_TEMPLATE: '.github/workflows/GMUC_ISSUE_TEMPLATE.md'
  contents: read
  issues: write

jobs:
  check-urls:
    name: Check URLs
    runs-on: ubuntu-latest

    steps:
      - name: Check out source repository
        uses: actions/checkout@v3

      - name: Check the links in the README.md file
        run: |
          # Note: "paste" here is GNU paste, not /usr/bin/paste on macOS.
          # On macOS, you need to install the GNU utils and use gpaste.
          read -ra URLS <<< $(sed -r -e 's/\[/\n[/g' README.md | sed -r -e 's/.*(\[.*\]\(.*\)).*/\n\1/g' | grep -oE '\[.*\]\(.*\)' | sed -r -e 's/.*\(([^)]+)\).*/\1/g' | grep http | paste -sd ' ')

          # Scan the links and verify if they are reachable
          BROKEN_LINKS=()
          for url in "${URLS[@]}"; do
            echo "Testing $url ...";
            if ! curl -IsSk "$url" > /dev/null; then
              BROKEN_LINKS+=("$url")
            fi
          done
          if [ ${#BROKEN_LINKS[@]} -gt 0 ]; then
            echo "Broken links found: ${BROKEN_LINKS[@]}" >&2
            BROKEN_LINKS_STRING="<ul>"
            BROKEN_LINKS_STRING+=$(printf "<li><code>%s</code></li>" "${BROKEN_LINKS[@]}")
            BROKEN_LINKS_STRING+="</ul>"
            echo "BROKEN_LINKS=$BROKEN_LINKS_STRING" >> $GITHUB_ENV
            exit 1
          else
            echo "No broken links found."
          fi

      - name: Create a new issue for the broken links
        uses: JasonEtco/create-an-issue@v2
        if: failure()
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          FILE_CHECKED: 'README.md'
        with:
          filename: ${{env.GMUC_ISSUE_TEMPLATE}}
